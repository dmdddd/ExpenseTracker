<resources>
    <string name="app_name">Expense Tracker</string>
    <string name="title_activity_target_showing">Expense Tracker</string>
    <string name="title_activity_show_target">Expense Tracker</string>
    <!--Main Activity-->
    <string name="choose_target">Choose a subject</string>
    <string name="new_name">New name</string>
    <string name="add_target">Add subject</string>
    <string name="language">Language</string>
    <string name="backup">Backup</string>
    <string name="_choose_language">Choose a language</string>
    <!--TargetShowingActivity button navigation menu-->
    <string name="title_home">Home</string>
    <string name="title_piechart">Piechart</string>
    <string name="title_settings">Settings</string>
    <!--Target specific menu-->
    <string name="rename">Rename</string>
    <string name="remove">Remove</string>
    <!--FragmentTargetSettings-->
    <string name="settings">Settings</string>
    <string name="currency">Currency</string>
    <string name="save">Save</string>
    <string name="name">Name</string>
    <string name="chart_color">Chart color</string>
    <!--CategoryShowingFragment-->
    <string name="total">Total: </string>
    <string name="add_category">Add category</string>
    <string name="specify_category_name">Specify category name</string>
    <string name="no_name_given">No name has been given</string>
    <!--popupMenu-->
    <string name="confirm">Confirm</string>
    <string name="cancel">Cancel</string>
    <!--ShowPaymentsInCategory-->
    <string name="remove_category">remove category</string>
    <string name="add_expense">add expense</string>
    <!--Popup menu prompts-->
    <string name="expense_deleting_warrning">Are you sure you want to remove this expense?</string>
    <string name="category_deleting_warrning">Are you sure you want to delete the category and all its payments?</string>
    <string name="target_deleting_warrning">Are you sure you want to delete this subject?</string>
    <string name="edit">Edit</string>
    <!--AddTargetActivity-->
    <string name="target">Subject name</string>
    <string name="default_currency">Default currency</string>
    <string name="common_categories">Common categories</string>
    <string name="food">Food</string>
    <string name="gas">Gas</string>
    <string name="shopping">Shopping</string>
    <string name="drinks">Drinks</string>
    <string name="accommodation">Accommodation</string>
    <string name="add">Add</string>
    <!--ShowPaymentInCategory-->
    <!--ShowPaymentInCategory-->
    <string name="no_expenses_added">No expenses have been added.</string>
    <!--Add/Edit Expense-->
    <string name="amount">Amount</string>
    <string name="amount_hint">How much?</string>
    <string name="date">Date</string>
    <string name="date_hint">Optional</string>
    <string name="details">Details</string>
    <string name="details_hint">Notes</string>
    <string name="no_amount_given">No Amount has been given</string>
    <string name="adding_to">Adding to</string>
    <string name="editing">Editing expense under</string>
    <string name="in">in</string>
    <string name="no_details_were_given">No additional info.</string>
    <!--EditExpenseActivity-->
    <string name="nothing_to_update">Nothing to update</string>
    <!--Backup Activity-->
    <string name="import_data">Import</string>
    <string name="import_msg">Importing is done from /Documents/ExpenseTracker/</string>
    <string name="import_note">Existing data will not be overwritten, imported data will be added to the existing one</string>
    <string name="export_data">Export</string>
    <string name="export_share_data">Export and share</string>
    <string name="export_msg">The backup file will be saved at /Documents/ExpenseTracker/</string>

    <!--TargetsForImport Activity-->
    <string name="import_all">Import All</string>
    <string name="choosing_targets_from">Choosing targets from</string>
    <string name="title_activity_import_target_selection">ImportTargetSelection</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="action_settings">Settings</string>


</resources>
